import type { Metadata } from 'next'
import { dir } from 'i18next'
import { notFound } from 'next/navigation'
import { ToastContainer } from 'react-toastify'
import { initTranslations } from '@/app/init-translations'
import { Navigation, ThemeProvider, TranslationProvider } from '@/components'
import { i18nConfig } from '@/i18n.config'
import { APP_DATA } from '@/lib/constants'
import { montserrat, playwrite } from '@/lib/fonts'
import '@/app/globals.css'

export function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }))
}

export const metadata: Metadata = {
  applicationName: APP_DATA.APP_NAME,
  title: { default: `${APP_DATA.APP_NAME} | Home`, template: `${APP_DATA.APP_NAME} | %s` },
  description: `${APP_DATA.APP_NAME} generated by Create Next App`,
  keywords: ['Next.js', 'React', 'Tailwind CSS', 'TypeScript', APP_DATA.APP_NAME],
  authors: { name: APP_DATA.AUTHOR_NAME, url: 'https://github.com/esteban-vm' },
  generator: 'Next.js',
  creator: APP_DATA.AUTHOR_NAME,
  publisher: APP_DATA.AUTHOR_NAME,
  referrer: 'origin-when-cross-origin',
}

export default async function RootLayout({ children, params }: Props.LayoutProps) {
  const { locale } = await params

  if (!i18nConfig.locales.includes(locale)) {
    notFound()
  }

  const { resources } = await initTranslations(locale)

  return (
    <html dir={dir(locale)} lang={locale} suppressHydrationWarning>
      <body className={`${montserrat.variable} ${playwrite.variable} antialiased`}>
        <TranslationProvider locale={locale} resources={resources}>
          <ThemeProvider value={{ light: 'corporate', dark: 'night' }} disableTransitionOnChange>
            <Navigation />
            {children}
          </ThemeProvider>
        </TranslationProvider>
        <ToastContainer position='bottom-center' theme='colored' />
      </body>
    </html>
  )
}
